version: '2.1'

services:
  
  db:
    image: postgres:11.1-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: 0JjV5(G26,^{a&L8
      POSTGRES_USER: identity
    volumes:
      - ./scripts:/docker-entrypoint-initdb.d
      - ./test_data/db:/var/lib/postgresql/data
    ports:
      - 5432:5432

  logger:
    image: stefanfcb94/musicplayer-logger-service:latest
    restart: always
    command: node dist/index.js
    volumes:
      - ./config:/opt/service/config
      - ./test_data/logs:/opt/service/logs
    environment:
      - USE_HTTPS=true
      - CERTIFICATE_FILE=/opt/service/config/ssl/musicserver.crt
      - PRIVATE_KEY_FILE=/opt/service/config/ssl/musicserver.key
      - LOGGER_HTTP_PORT=80
      - LOGGER_HTTPS_PORT=443
      - LOGGER_HTTP_SOCKET_PORT=8080
      - LOGGER_HTTPS_SOCKET_PORT=8443
      - DB_HOST=db
      - DB_PORT=5432
      - LOGGER_DB_USERNAME=logger
      - LOGGER_DB_PASSWORD=logger
      - LOGGER_DB_DATABASE=logger
    ports:
      - 10000:80
      - 10001:443
      - 10002:8080
      - 10003:8443
    depends_on:
      - "db"

  appl:
    image: node:11-alpine
    volumes: 
      - .:/usr/src/service
      - ./config:/config
    working_dir: /usr/src/service
    command: sh -c "apk add --no-cache curl && npm run dev"
    ports:
      - 80:80
      - 443:443
      - 8080:8080
      - 8443:8443
    depends_on:
      - "db"
      - "logger"
    healthcheck:
      test: curl -f http://localhost || exit 1
      interval: 5s
      timeout: 2s
    environment:
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - NODE_ENV=development
      - LOGGER_USE_HTTPS=true
      - LOGGER_HOST=logger
      - LOGGER_HTTPS_PORT=443
      - DB_HOST=db
      - DB_PORT=5432
      - AUTH_DB_USERNAME=auth
      - AUTH_DB_PASSWORD=auth
      - AUTH_DB_DATABASE=auth
      - AUTH_USE_HTTPS=true
      - AUTH_HTTPS_PORT=443
      - AUTH_HTTP_PORT=80
      - CERTIFICATE_FILE=/config/ssl/musicserver.crt
      - PRIVATE_KEY_FILE=/config/ssl/musicserver.key


  test:
    image: node:11-alpine
    environment:
      NODE_ENV: test
    volumes:
      - .:/usr/src/service
      - ./test_data/logs:/usr/src/service/logs
    working_dir: /usr/src/service
    depends_on:
      appl:
        condition: service_healthy
    environment:
      - NODE_ENV=test
      - DB_HOST=db
      - DB_PORT=5432
      - LOGGER_DB_USERNAME=logger
      - LOGGER_DB_PASSWORD=0JjV5(G26,^{a&L8
      - LOGGER_DB_DATABASE=logger
      - AUTH_DB_USERNAME=auth
      - AUTH_DB_PASSWORD=auth
      - AUTH_DB_DATABASE=auth
      - AUTH_HOST=appl
      - AUTH_PORT=443
      - AUTH_USE_HTTPS=true


